name: publish-kong-ui
on:
  push:
    branches: [master]
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node ${{ matrix.node_version }}
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: 'https://npm.pkg.github.com'

      - name: Get Version
        id: get_major_version
        run: |
          echo "CURRENT_VERSION=$(node -pe "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Tag Check
        id: tag_check
        run: |
          GET_API_URL="https://api.github.com/repos/${GITHUB_REPOSITORY}/git/ref/tags/v${CURRENT_VERSION}"
          http_status_code=$(curl -LI $GET_API_URL -o /dev/null -w '%{http_code}\n' -s \
            -H "Authorization: token ${GITHUB_TOKEN}")
          if [ "$http_status_code" -ne "404" ] ; then
            echo "exist_tag=true" >> $GITHUB_OUTPUT
          else
            echo "exist_tag=false" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure NPM
        run: |
          echo "//npm.pkg.github.com/:_authToken=$NODE_AUTH_TOKEN" > .npmrc
          echo '@dunamu-fd:registry=https://npm.pkg.github.com' >> .npmrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish
        if: steps.tag_check.outputs.exist_tag == 'false'
        run: |
          yarn install
          yarn build
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  noti:
    if: ${{ always() }}
    needs: publish
    runs-on: [self-hosted, default]
    steps:
      - name: Slack notification
        uses: rtCamp/action-slack-notify@12e36fc18b0689399306c2e0b3e0f2978b7f1ee7
        env:
          SLACK_USERNAME: 'kong-ui-publish-prod'
          SLACK_CHANNEL: '#op-platform-bravo-deploy'
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON_EMOJI: ${{ needs.publish.result == 'success' && ':art:' || ':x:' }}
          SLACK_WEBHOOK: ${{ secrets.BRAVO_DEPLOY_SLACK_WEB_HOOK }} # 사용하는 slack hook 적용
          SLACK_MESSAGE: ${{ needs.publish.result == 'success' && '<@U03ENQ74S9K> <@U02RRJM4ST1> <@U02SJSA85R7> @etham @den @koon Kong-UI Prod 배포 완료' || '<@U03ENQ74S9K> <@U02RRJM4ST1> <@U02SJSA85R7> @etham @den @koon Kong-UI Prod 배포 실패' }}
          SLACK_LINK_NAMES: true
